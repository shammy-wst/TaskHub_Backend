name: CI Tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test-nodejs:
    name: Test with Node.js
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: taskhub_test
          POSTGRES_USER: myuser
          POSTGRES_PASSWORD: mypassword
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18.x"
          cache: "npm"
      - name: Install dependencies
        run: npm ci
      - name: Run tests
        run: npm test
        env:
          NODE_ENV: test
          DB_NAME: taskhub_test
          DB_USER: myuser
          DB_PASSWORD: mypassword
          DB_HOST: localhost
          DB_PORT: 5432
          JWT_SECRET: test-secret-key

  test-docker:
    name: Test with Docker
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Set up Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose-plugin

      - name: Build and test
        run: docker compose -f docker-compose.test.yml up --build --exit-code-from app

      - name: Clean up
        if: always()
        run: docker compose -f docker-compose.test.yml down
